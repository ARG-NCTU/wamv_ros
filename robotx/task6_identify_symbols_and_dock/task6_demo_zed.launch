<launch>  

    <arg name="veh" />
    <arg name="visual" default="false"/>

    <!-- zed camera -->
    <arg name="camera" default="false" doc="camera set to false means you can play a log data as testing"/>   

    <!-- mser region proposal -->
    <arg name="image_type" default="raw" doc="image_type, compressed or raw"/> 
    <arg name="mser_th" default="10" doc="contrast threshold of mser"/> 
    <arg name="frame_division" default="5" doc="contrast threshold of mser"/>
    <arg name="cropping_data_mser" default="false" doc="true for cropping meser region images"/>
    <arg name="image_topic" default="" doc="rostopic of image message"/>
    <arg name="rotation" default="false" doc="image rotation with 180 degree"/>

    <!-- placard cnn classification -->
    <arg name="model_name" default="10_classes_robotx_duckietown_caffenet"/> 
    <arg name="save_result_cnn" default="false"/>
    <arg name="top1_threshold" default="0.9"/>
    <arg name="diff_threshold" default="1000"/>
    <arg name="cpu" default="false"/>

    <!-- zed camera -->
    <include if="$(arg camera)" file="$(find robotx)/launch/zed_single.launch">
    </include> 

    <!-- mser region proposal -->
    <remap from="mser_region_extraction_node/image_input" to="rgb/image_rect_color"/>  
    <include file="$(find pi_camera_perception)/launch/mser_region_extraction_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="image_type" value="$(arg image_type)"/>
        <arg name="mser_th" value="$(arg mser_th)"/>
        <arg name="frame_division" value="$(arg frame_division)"/>
        <arg name="visual" value="$(arg visual)"/>
        <arg name="cropping_data" value="$(arg cropping_data_mser)"/>
        <arg name="image_topic" value="$(arg image_topic)"/>
        <arg name="rotation" value="$(arg rotation)"/>
    </include>

    <!-- placard cnn classification -->
    <remap from="cnn_classifier_caffe_node/region_proposals_image" to="mser_region_extraction_node/region_proposals_image"/> 
    <include file="$(find placard_classification)/launch/cnn_classifier_caffe_node.launch">
        <arg name="veh" value="$(arg veh)"/>
        <arg name="model_name" value="$(arg model_name)"/>
        <arg name="visual" value="$(arg visual)"/>
        <arg name="save_result" value="$(arg save_result_cnn)"/>
        <arg name="top1_threshold" value="$(arg top1_threshold)"/> 
        <arg name="diff_threshold" value="$(arg diff_threshold)"/> 
        <arg name="cpu" value="$(arg cpu)"/> 
    </include>          
 
   
</launch>